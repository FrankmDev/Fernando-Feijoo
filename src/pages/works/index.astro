---
import "@styles/general.css";
import Layout from "@layouts/Layout.astro";
import SectionContainer from "@components/SectionContainer.astro";
import PageBanner from "@components/PageBanner.astro";
import TitleSection from "@components/TitleSection.astro";
import CollectionCard from "@components/CollectionCard.astro";
import { WORKS } from "@data/works";

// Helper function to get the first image from a collection or category
function getFirstImageFromWorks(works: any[]): string | null {
  if (!works || works.length === 0) return null;

  for (const work of works) {
    if (work.imageUrls && work.imageUrls.length > 0) {
      return work.imageUrls[0];
    }
  }
  return null;
}

// Define the processed collection type
interface ProcessedCollection {
  title: string;
  slug: string;
  description?: string;
  workCount: number;
  href: string;
  imageUrl: string | null;
  imageAlt: string;
}

// Process each category to prepare data for display
const processedCategories = WORKS.map((category) => {
  if (category.collections) {
    // Category has collections (like Prints)
    const collections: ProcessedCollection[] = category.collections.map(
      (collection) => ({
        title: collection.title,
        slug: collection.slug,
        description: collection.description,
        workCount: collection.works.length,
        href: `/works/${category.slug}/${collection.slug}`,
        imageUrl: getFirstImageFromWorks(collection.works),
        imageAlt: `${collection.title} collection by Fernando Feijoo`,
      }),
    );

    return {
      ...category,
      collections,
    };
  } else if (category.works) {
    // Category has direct works (like Artist Books, Ceramics, etc.)
    const collections: ProcessedCollection[] = [
      {
        title: category.title,
        slug: category.slug,
        description: `Explore ${category.title.toLowerCase()} works`,
        workCount: category.works.length,
        href: `/works/${category.slug}`,
        imageUrl: getFirstImageFromWorks(category.works),
        imageAlt: `${category.title} works by Fernando Feijoo`,
      },
    ];

    return {
      ...category,
      collections,
    };
  }

  return {
    ...category,
    collections: [] as ProcessedCollection[],
  };
});

// Filter out categories that don't have any collections or works
const categoriesWithContent = processedCategories.filter(
  (category) => category.collections && category.collections.length > 0,
);
---

<Layout title="Works - Fernando Feijoo">
  <SectionContainer id="works">
    <main>
      <PageBanner title="Works" />

      <section class="py-12">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">
              Explore Fernando Feijoo's diverse body of work spanning prints,
              artist books, ceramics, drawings, and mixed media pieces.
            </p>
          </div>

          {
            categoriesWithContent.map((category) => (
              <div class="mb-16">
                <TitleSection title={category.title} />

                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 md:gap-8 mt-8">
                  {category.collections?.map((collection) => (
                    <CollectionCard
                      title={collection.title}
                      href={collection.href}
                      imageUrl={collection.imageUrl}
                      imageAlt={collection.imageAlt}
                      description={collection.description}
                      workCount={collection.workCount}
                    />
                  ))}
                </div>
              </div>
            ))
          }

          <!-- Call to Action -->
          <div class="text-center mt-16 pt-12 border-t border-gray-200">
            <h2 class="text-2xl font-bold text-gray-900 mb-4">
              Interested in a Piece?
            </h2>
            <p class="text-gray-600 mb-6 max-w-md mx-auto">
              Get in touch to inquire about availability, pricing, or
              commissioning new work.
            </p>
            <a
              href="/contact"
              class="inline-flex items-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-gray-900 hover:bg-gray-800 transition-colors duration-200"
            >
              Contact Fernando
            </a>
          </div>
        </div>
      </section>
    </main>
  </SectionContainer>
</Layout>

<style>
  /* Additional styles for better visual hierarchy */
  .container {
    max-width: 1200px;
  }

  @media (min-width: 1024px) {
    .grid {
      gap: 2rem;
    }
  }
</style>
