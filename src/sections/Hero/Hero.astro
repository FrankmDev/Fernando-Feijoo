---
import Socials from "@components/Hero/Socials.astro";
import SliderHero from "@components/SliderHero.vue";
import ContactBanner from "@components/Hero/ContactBanner.astro";
import { WORKS } from "@data/works";

// Helper function to process image URLs
function processImageUrl(imageUrl: string): string {
  if (!imageUrl) return "";

  if (imageUrl.startsWith("@assets/")) {
    return imageUrl.replace("@assets/", "/");
  }

  if (imageUrl.startsWith("@")) {
    return imageUrl.substring(1);
  }

  if (imageUrl.startsWith("/") || imageUrl.startsWith("http")) {
    return imageUrl;
  }

  return "/" + imageUrl;
}

// Get all works from all categories
const allWorks = WORKS.flatMap((category) =>
  category.works
    ? category.works.map((work) => ({
        ...work,
        categorySlug: category.slug,
        categoryTitle: category.title,
      }))
    : category.collections
      ? category.collections.flatMap((collection) =>
          collection.works.map((work) => ({
            ...work,
            categorySlug: category.slug,
            categoryTitle: category.title,
            collectionSlug: collection.slug,
            collectionTitle: collection.title,
          })),
        )
      : [],
);

// Organize works by category for gallery
const gallery = WORKS.map((category) => {
  const categoryWorks = allWorks
    .filter((work) => work.categorySlug === category.slug)
    .slice(0, 9); // Changed to 9 to fill 3x3 grid better

  return {
    id: category.slug,
    title: category.title,
    items: categoryWorks,
  };
}).filter((category) => category.items.length > 0);
---

<section class="w-full px-4 mx-auto py-16 flex flex-col items-center">
  <SliderHero client:load />
  <Socials />

  <section class="flex flex-col items-center gap-20 w-full mb-20">
    {
      gallery.map(({ id, title, items }) => (
        <section id={id} class="w-full max-w-7xl">
          <h2 class="text-3xl md:text-4xl font-semibold mb-12 tracking-tight text-zinc-900 text-center">
            {title}
          </h2>
          <div class="grid grid-cols-3 gap-1 md:gap-2 w-full">
            {items.map((work) => {
              const workImageUrls = work.imageUrls || [];
              const hasImages = workImageUrls.length > 0;
              const firstImageUrl = hasImages
                ? processImageUrl(workImageUrls[0])
                : "";

              return (
                <a
                  href={`/works/${work.slug}`}
                  class="group block relative bg-white transition-transform duration-300 hover:scale-[1.02]"
                  aria-label={`View details for ${work.title}`}
                >
                  <div class="aspect-square relative overflow-hidden bg-gray-100">
                    {hasImages && firstImageUrl ? (
                      <img
                        src={firstImageUrl}
                        alt={work.title}
                        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                        loading="lazy"
                        decoding="async"
                      />
                    ) : (
                      <div class="w-full h-full flex items-center justify-center bg-gray-50">
                        <div class="text-center p-4">
                          <div class="text-gray-400 text-2xl md:text-4xl mb-2">üñºÔ∏è</div>
                          <h3 class="text-xs md:text-sm font-medium text-gray-600 line-clamp-2">
                            {work.title}
                          </h3>
                        </div>
                      </div>
                    )}

                    <!-- Hover overlay -->
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-30 transition-all duration-300 flex items-center justify-center">
                      <div class="text-white text-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                        <h3 class="text-sm md:text-lg font-medium mb-1">{work.title}</h3>
                        <p class="text-xs opacity-80">View Details</p>
                      </div>
                    </div>
                  </div>
                </a>
              );
            })}
          </div>

          {/* View All Button */}
          <div class="text-center mt-8">
            <a
              href={`/works${id === 'prints' ? '' : `/${id}`}`}
              class="inline-flex items-center px-6 py-3 text-sm font-medium text-gray-900 bg-white hover:bg-gray-100 border border-gray-200 hover:border-gray-300 transition-all duration-200"
            >
              View All {title}
              <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </a>
          </div>
        </section>
      ))
    }
  </section>

  <ContactBanner />
</section>

<style>
  /* Ensure proper aspect ratio for square images */
  .aspect-square {
    aspect-ratio: 1 / 1;
  }

  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Responsive grid - always 3 columns but with different gaps */
  @media (max-width: 480px) {
    .grid {
      gap: 1px;
    }
  }

  @media (min-width: 481px) and (max-width: 768px) {
    .grid {
      gap: 0.125rem; /* 2px */
    }
  }

  @media (min-width: 769px) {
    .grid {
      gap: 0.5rem; /* 8px */
    }
  }

  /* Smooth transitions */
  .transition-transform {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Hover effects */
  .hover\:scale-\[1\.02\]:hover {
    --tw-scale-x: 1.02;
    --tw-scale-y: 1.02;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .group:hover .group-hover\:scale-110 {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  /* Remove any unwanted borders or shadows */
  .grid > * {
    border: none;
    box-shadow: none;
  }

  /* Ensure full width utilization */
  .max-w-7xl {
    max-width: 1280px;
  }

  /* Performance optimization */
  .group {
    will-change: transform;
  }

  .group img {
    will-change: transform;
  }
</style>
